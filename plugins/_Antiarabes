// Plugin antiarabes - Elimina automáticamente números con prefijos árabes
// Funciona de manera similar al antilink pero para números específicos

const prefijosArabes = [
    '212', '213', '216', '218', '220', '221', '222', '223', '224', '225', 
    '226', '227', '228', '229', '230', '231', '232', '233', '234', '235',
    '236', '237', '238', '239', '240', '241', '242', '243', '244', '245',
    '246', '247', '248', '249', '250', '251', '252', '253', '254', '255',
    '256', '257', '258', '260', '261', '262', '263', '264', '265', '266',
    '267', '268', '269', '290', '291', '297', '298', '299', '350', '351',
    '352', '353', '354', '355', '356', '357', '358', '359', '370', '371',
    '372', '373', '374', '375', '376', '377', '378', '380', '381', '382',
    '383', '385', '386', '387', '389', '420', '421', '423', '590', '591',
    '592', '593', '594', '595', '596', '597', '598', '599', '670', '672',
    '673', '674', '675', '676', '677', '678', '679', '680', '681', '682',
    '683', '684', '685', '686', '687', '688', '689', '690', '691', '692',
    '850', '852', '853', '855', '856', '880', '886', '960', '961', '962',
    '963', '964', '965', '966', '967', '968', '970', '971', '972', '973',
    '974', '975', '976', '977', '992', '993', '994', '995', '996', '998'
];

function esNumeroArabe(numero) {
    const numeroLimpio = numero.replace(/[^\d+]/g, '');

    for (const prefijo of prefijosArabes) {
        if (numeroLimpio.startsWith(`+${prefijo}`) || numeroLimpio.startsWith(prefijo)) {
            return true;
        }
    }
    return false;
}

// Comando para activar/desactivar antiarabes
let handler = async (m, { conn, isAdmin, isBotAdmin, command }) => {
    if (!m.isGroup) return m.reply('❌ Este comando solo funciona en grupos.');
    if (!isAdmin) return m.reply('❌ Solo los administradores pueden usar este comando.');
    if (!isBotAdmin) return m.reply('❌ El bot debe ser administrador para usar esta función.');

    let chat = global.db.data.chats[m.chat];

    if (command === 'antiarabes') {
        let status = chat.antiarabes ? '✅ Activado' : '❌ Desactivado';
        return m.reply(`🛡️ *Estado del AntiÁrabes:* ${status}\n\n📝 *Comandos disponibles:*\n• *.antiarabeson* - Activar\n• *.antiarabesoff* - Desactivar`);
    }

    if (command === 'antiarabeson') {
        chat.antiarabes = true;
        m.reply('✅ *AntiÁrabes activado*\n\n🗑️ Los números con prefijos árabes serán eliminados automáticamente.');
    } else if (command === 'antiarabesoff') {
        chat.antiarabes = false;
        m.reply('❌ *AntiÁrabes desactivado*\n\n👥 Los números árabes ya no serán eliminados automáticamente.');
    }
};

handler.help = ['antiarabes', 'antiarabeson', 'antiarabesoff'];
handler.tags = ['grupo'];
handler.command = ['antiarabes', 'antiarabeson', 'antiarabesoff'];
handler.group = true;
handler.admin = true;
handler.botAdmin = true;

export default handler;

// Función before para ejecutar automáticamente
export async function before(m, { conn, participants, isBotAdmin, isAdmin }) {
    if (!m.isGroup || m.isBaileys || !isBotAdmin) return;

    let chat = global.db.data.chats[m.chat];

    // Si antiarabes está desactivado o no existe el chat, no hacer nada
    if (!chat || !chat.antiarabes) return;

    const sender = m.sender;
    const numeroSender = sender.replace(/@s\.whatsapp\.net|@c\.us/g, '');

    // No eliminar a los administradores del grupo
    if (isAdmin) return;

    // Verificar si el remitente tiene un número árabe
    if (esNumeroArabe(numeroSender)) {
        try {
            // Enviar mensaje discreto
            await conn.sendMessage(m.chat, {
                text: `🗑️ Escoria humana eliminada`,
            });

            // Eliminar al usuario
            await conn.groupParticipantsUpdate(m.chat, [sender], 'remove');

        } catch (error) {
            console.error('Error eliminando usuario árabe:', error);
        }
        return;
    }

    // También verificar cuando se unen nuevos miembros
    if (m.messageStubType === 27 || m.messageStubType === 31) {
        const newMembers = m.messageStubParameters || [];

        for (const newMember of newMembers) {
            const numeroMiembro = newMember.replace(/@s\.whatsapp\.net|@c\.us/g, '');

            if (esNumeroArabe(numeroMiembro)) {
                try {
                    await conn.sendMessage(m.chat, {
                        text: `🗑️ Escoria humana eliminada`,
                    });

                    await conn.groupParticipantsUpdate(m.chat, [newMember], 'remove');
                } catch (error) {
                    console.error('Error eliminando nuevo miembro árabe:', error);
                }
            }
        }
    }
